[uwsgi]
homedir=/app
chdir=%(homedir)/
env=DJANGO_SETTINGS_MODULE=mysite.settings
module=mysite.wsgi:application
master=true
pidfile=/tmp/project-master.pid
gid=admin
uid=user
vacuum=true                         ; clear environment on exit
ignore-sigpipe=true

# extra configs
http-timeout=300
enable-threads=true
harakiri=300                        ; respawn processes taking more than 300 seconds
die-on-term=true
need-app=true
; disable-logging=true
; log-4xx=true
; log-5xx=true
max-requests=5000                   ; respawn processes after serving 5000 requests
processes=8                         ; number of worker processes
threads=3
offload-threads=3
listen=1024
buffer-size=65536
post-buffering=16384

single-interpreter=true

max-worker-lifetime=1800            ; Restart workers after this many seconds
reload-on-rss=256                   ; Restart workers after this much resident memory
worker-reload-mercy=60              ; How long to wait before forcefully killing workers


cheaper-algo=busyness
cheaper=2                          ; Minimum number of workers allowed
cheaper-initial=2                  ; Workers created at startup
cheaper-overload=1                 ; Length of a cycle in seconds
cheaper-step=4                     ; How many workers to spawn at a time


cheaper-busyness-multiplier=20     ; How many cycles to wait before killing workers
cheaper-busyness-min=20            ; Below this threshold, kill workers (if stable for multiplier cycles)
cheaper-busyness-max=70            ; Above this threshold, spawn new workers
cheaper-busyness-backlog-alert=8   ; Spawn emergency workers if more than this many requests are waiting in the queue
cheaper-busyness-backlog-step=4    ; How many emergency workers to create if there are too many requests in the queue